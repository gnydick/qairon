package jenkins

node('master') {
    stage('Gather Parameters') {
        def qairon = load "../../lib/jenkins/qairon/"
        common = load "../lib/qairon.src.common.groovy"
        properties([parameters([string(defaultValue: '', description: '', name: 'SERVICE_ID', trim: true), [$class: 'CascadeChoiceParameter', choiceType: 'PT_MULTI_SELECT', description: '', filterLength: 3, filterable: true, name: 'BUILD_ID', randomName: 'choice-parameter-4620443893435', referencedParameters: 'SERVICE_ID', script: [$class: 'GroovyScript', fallbackScript: [classpath: [], sandbox: false, script: ''], script: [classpath: [], sandbox: false, script: '''import groovy.json.JsonSlurper

svc_ids = groovy.json.JsonOutput.toJson(SERVICE_ID.split(","))

try {
    List<String> resultArray = new ArrayList<String>()
    url = \'http://qairon:5001/api/rest/v1/build?q={"filters":[{"name":"service_id","op":"in","val":\'+ svc_ids + \'}]}\'

    HttpURLConnection connection = new URL(url).openConnection()
    connection.connect()
    if (connection.responseCode == 200) {
        jsonSlurper = new JsonSlurper()
        // get the JSON response
        inStream = connection.inputStream
        builds = jsonSlurper.parse(inStream).objects
        builds.objects
        builds.each { build  -> resultArray.add(build.id)}
        connection.disconnect()

        return resultArray


    } else {
        print connection.responseCode + ": " + connection.inputStream.text

    }



} catch (e) {
    print(e)
}

''']]], [$class: 'CascadeChoiceParameter', choiceType: 'PT_MULTI_SELECT', description: '', filterLength: 3, filterable: true, name: 'RELEASE_ID', randomName: 'choice-parameter-4620449435654', referencedParameters: 'BUILD_ID', script: [$class: 'GroovyScript', fallbackScript: [classpath: [], sandbox: false, script: ''], script: [classpath: [], sandbox: false, script: '''import groovy.json.JsonSlurper

build_ids = groovy.json.JsonOutput.toJson(BUILD_ID.split(","))


try {
    List<String> resultArray = new ArrayList<String>()
    url = \'http://qairon:5001/api/rest/v1/release?q={"filters":[{"name":"build_id","op":"in","val":\'+ build_ids + \'}]}\'

  	
  
    HttpURLConnection connection = new URL(url).openConnection()
    connection.connect()
    if (connection.responseCode == 200) {
        jsonSlurper = new JsonSlurper()
        // get the JSON response
        inStream = connection.inputStream
        releases = jsonSlurper.parse(inStream).objects
        releases.objects
        releases.each { release  -> resultArray.add(release.id)}
        connection.disconnect()

        return resultArray


    } else {
        print connection.responseCode + ": " + connection.inputStream.text

    }



} catch (e) {
    print(e)
}

''']]], [$class: 'CascadeChoiceParameter', choiceType: 'PT_MULTI_SELECT', description: '', filterLength: 3, filterable: true, name: 'DEPLOYMENT_ID', randomName: 'choice-parameter-4620453824735', referencedParameters: 'SERVICE_ID,RELEASE_ID', script: [$class: 'GroovyScript', fallbackScript: [classpath: [], sandbox: false, script: ''], script: [classpath: [], sandbox: false, script: '''import groovy.json.JsonSlurper

svc_ids = groovy.json.JsonOutput.toJson(SERVICE_ID.split(","))
rel_ids = groovy.json.JsonOutput.toJson(RELEASE_ID.split(","))


try {
    List<String> resultArray = new ArrayList<String>()
    url = \'http://qairon:5001/api/rest/v1/deployment?q={"filters":[{"name":"service_id","op":"in","val":\'+ svc_ids + \'},{"name":"release_id","op":"in","val":\'+ rel_ids + \'}]}\'

    HttpURLConnection connection = new URL(url).openConnection()
    connection.connect()
    if (connection.responseCode == 200) {
        jsonSlurper = new JsonSlurper()
        // get the JSON response
        inStream = connection.inputStream
        deployments = jsonSlurper.parse(inStream).objects
        deployments.objects
        deployments.each { deployment  -> resultArray.add(deployment.id)}
        connection.disconnect()

        return resultArray


    } else {
        print connection.responseCode + ": " + connection.inputStream.text

    }



} catch (e) {
    print(e)
}


''']]]])])
    }
}