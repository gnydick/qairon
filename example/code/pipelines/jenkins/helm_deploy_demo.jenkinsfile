package jenkins

import groovy.json.JsonSlurper



def jobs = [:]

dep_ids = DEPLOYMENT_ID.split(",")

println(dep_ids)
for (int i = 0; i < dep_ids.size(); i++) {
    def index = i
    def dep_id = dep_ids[index]
    println(dep_ids[index])
    jobs[i] = {
        node('jenkins-agent') {
            container(name: 'helm') {
                stage(name: 'parallelize helm installations') {

                    def command = $/
                        set -x
                        SERVICE_ID=$$(curl -s qairon:5001/api/rest/v1/deployment$/${dep_id}/service | jq -r  '.id')
                        HELM_CHART=$$(curl -s qairon:5001/api/rest/v1/service$/$$SERVICE_ID | jq -r '.defaults | fromjson | .releases.helm')
                        REPO=$$(echo $$HELM_CHART | jq -r .repo)
                        URL=$$(curl -s qairon:5001/api/rest/v1/repo/helm:$$REPO | jq -r .url)
                        ARTIFACT=$$(echo $$HELM_CHART | jq -r .artifact)
                        echo "ideally we would download a specifically packaged helm chart based on the build rolled into a release archive"
                        echo "also, we would use the specified deployment target from the specified deployment"
                        helm repo add $$REPO $$URL
                        helm repo update
                        helm upgrade --install $$ARTIFACT $$REPO$/$$ARTIFACT
                    /$


                    sh script: command

                }
            }
        }
    }

}
parallel(jobs)