"""empty message

Revision ID: a766f3aae357
Revises: build_and_release_artifacts_
Create Date: 2022-03-10 13:24:15.035679

"""

# revision identifiers, used by Alembic.
revision = 'a766f3aae357'
down_revision = 'build_and_release_artifacts_'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import context


def upgrade():
    upgrades_pre()
    schema_upgrades()
    upgrades_post()


def downgrade():
    downgrades_pre()
    schema_downgrades()
    downgrades_post()


def upgrades_pre():
    """Add any optional data prep pre migrations here!"""
    pass


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('allocation', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('allocation', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('allocation_type', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('allocation_type', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('application', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('application', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('build', sa.Column('defaults', sa.Text(), nullable=True))
    op.alter_column('build', 'last_updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.add_column('build_artifact', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('build_artifact', sa.Column('defaults', sa.Text(), nullable=True))
    op.add_column('build_artifact', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('capacity', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('capacity', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('config_template', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('config_template', sa.Column('defaults', sa.Text(), nullable=True))
    op.add_column('config_template', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('deployment', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('deployment', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('deployment_config', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('deployment_config', sa.Column('defaults', sa.Text(), nullable=True))
    op.add_column('deployment_config', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('deployment_proc', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('deployment_proc', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('deployment_target', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('deployment_target', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('deployment_target_type', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('deployment_target_type', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('environment', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('environment', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('fleet', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('fleet', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('fleet_type', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('fleet_type', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('language', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('language', sa.Column('defaults', sa.Text(), nullable=True))
    op.add_column('language', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('network', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('network', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('partition', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('partition', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('proc', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('proc', sa.Column('defaults', sa.Text(), nullable=True))
    op.add_column('proc', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('provider', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('provider', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('provider_type', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('provider_type', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('region', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('region', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('release', sa.Column('defaults', sa.Text(), nullable=True))
    op.alter_column('release', 'last_updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.add_column('repo', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('repo', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('repo_type', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('repo_type', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('service', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('service', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('stack', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('stack', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('subnet', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('subnet', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    op.add_column('zone', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('zone', sa.Column('last_updated_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def upgrades_post():
    """Add any optional data prep post migrations here!"""
    pass


def downgrades_pre():
    """Add any optional data prep pre migrations here!"""
    pass


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('zone', 'last_updated_at')
    op.drop_column('zone', 'created_at')
    op.drop_column('subnet', 'last_updated_at')
    op.drop_column('subnet', 'created_at')
    op.drop_column('stack', 'last_updated_at')
    op.drop_column('stack', 'created_at')
    op.drop_column('service', 'last_updated_at')
    op.drop_column('service', 'created_at')
    op.drop_column('repo_type', 'last_updated_at')
    op.drop_column('repo_type', 'created_at')
    op.drop_column('repo', 'last_updated_at')
    op.drop_column('repo', 'created_at')
    op.alter_column('release', 'last_updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('release', 'defaults')
    op.drop_column('region', 'last_updated_at')
    op.drop_column('region', 'created_at')
    op.drop_column('provider_type', 'last_updated_at')
    op.drop_column('provider_type', 'created_at')
    op.drop_column('provider', 'last_updated_at')
    op.drop_column('provider', 'created_at')
    op.drop_column('proc', 'last_updated_at')
    op.drop_column('proc', 'defaults')
    op.drop_column('proc', 'created_at')
    op.drop_column('partition', 'last_updated_at')
    op.drop_column('partition', 'created_at')
    op.drop_column('network', 'last_updated_at')
    op.drop_column('network', 'created_at')
    op.drop_column('language', 'last_updated_at')
    op.drop_column('language', 'defaults')
    op.drop_column('language', 'created_at')
    op.drop_column('fleet_type', 'last_updated_at')
    op.drop_column('fleet_type', 'created_at')
    op.drop_column('fleet', 'last_updated_at')
    op.drop_column('fleet', 'created_at')
    op.drop_column('environment', 'last_updated_at')
    op.drop_column('environment', 'created_at')
    op.drop_column('deployment_target_type', 'last_updated_at')
    op.drop_column('deployment_target_type', 'created_at')
    op.drop_column('deployment_target', 'last_updated_at')
    op.drop_column('deployment_target', 'created_at')
    op.drop_column('deployment_proc', 'last_updated_at')
    op.drop_column('deployment_proc', 'created_at')
    op.drop_column('deployment_config', 'last_updated_at')
    op.drop_column('deployment_config', 'defaults')
    op.drop_column('deployment_config', 'created_at')
    op.drop_column('deployment', 'last_updated_at')
    op.drop_column('deployment', 'created_at')
    op.drop_column('config_template', 'last_updated_at')
    op.drop_column('config_template', 'defaults')
    op.drop_column('config_template', 'created_at')
    op.drop_column('capacity', 'last_updated_at')
    op.drop_column('capacity', 'created_at')
    op.drop_column('build_artifact', 'last_updated_at')
    op.drop_column('build_artifact', 'defaults')
    op.drop_column('build_artifact', 'created_at')
    op.alter_column('build', 'last_updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('build', 'defaults')
    op.drop_column('application', 'last_updated_at')
    op.drop_column('application', 'created_at')
    op.drop_column('allocation_type', 'last_updated_at')
    op.drop_column('allocation_type', 'created_at')
    op.drop_column('allocation', 'last_updated_at')
    op.drop_column('allocation', 'created_at')
    # ### end Alembic commands ###


def downgrades_post():
    """Add any optional data prep post migrations here!"""
    pass