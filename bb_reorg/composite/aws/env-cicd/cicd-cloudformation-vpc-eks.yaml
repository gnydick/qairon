AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deploy configured VPC, EKS, NodeStack'

Parameters:

  ClusterName:
    Type: String
    Default: cicd
    Description: EKS Cluster name

  ClusterRoleARN:
    Type: String
    Default: arn:aws:iam::407733091588:role/eksServiceRole
    Description: EKS Role ARN

  VPCCIDR:
    Type: String
    Default: 10.0.0.0/16
    Description: The CIDR range for the VPC.

  PublicSubnet01Block:
    Type: String
    Default: 10.0.128.0/20
    Description: CidrBlock for Public subnet 01 within the VPC

  PublicSubnet02Block:
    Type: String
    Default: 10.0.144.0/20
    Description: CidrBlock for Public subnet 02 within the VPC

  PublicSubnet03Block:
    Type: String
    Default: 10.0.160.0/20
    Description: CidrBlock for Public subnet 03 within the VPC

  PrivateSubnet01Block:
    Type: String
    Default: 10.0.0.0/19
    Description: CidrBlock for Private subnet 01 within the VPC

  PrivateSubnet02Block:
    Type: String
    Default: 10.0.32.0/19
    Description: CidrBlock for Private subnet 02 within the VPC

  PrivateSubnet03Block:
    Type: String
    Default: 10.0.64.0/19
    Description: CidrBlock for Private subnet 03 within the VPC

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "EKS cicd Network Configuration"
        Parameters:
          - VPCCIDR
          - PublicSubnet01Block
          - PublicSubnet02Block
          - PublicSubnet03Block
          - PrivateSubnet01Block
          - PrivateSubnet02Block
          - PrivateSubnet03Block
      -
        Label:
          default: "EKS cicd Cluster"
        Parameters:
          - ClusterName

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-VPC'
      - Key: kubernetes.io/cluster/${ClusterName}
        Value: shared

#-------------------------------------------------------------------#
######################################## PublicSubnetsConfiguration #

  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PublicSubnet01Block
      VpcId: !Ref VPC
      Tags:
      - Key: kubernetes.io/cluster/${ClusterName}
        Value: shared
      - Key: kubernetes.io/role/elb
        Value: true
      - Key: Name
        Value: !Sub "${AWS::StackName}-PublicSubnet01"

  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PublicSubnet02Block
      VpcId: !Ref VPC
      Tags:
      - Key: kubernetes.io/cluster/${ClusterName}
        Value: shared
      - Key: kubernetes.io/role/elb
        Value: true
      - Key: Name
        Value: !Sub "${AWS::StackName}-PublicSubnet02"

  PublicSubnet03:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PublicSubnet03Block
      VpcId: !Ref VPC
      Tags:
      - Key: kubernetes.io/cluster/${ClusterName}
        Value: shared
      - Key: kubernetes.io/role/elb
        Value: true
      - Key: Name
        Value: !Sub "${AWS::StackName}-PubliSubnet03"

#-------------------------------------------------------------------#
####################################### PrivateSubnetsConfiguration #

  PrivateSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PrivateSubnet01Block
      VpcId: !Ref VPC
      Tags:
      - Key: kubernetes.io/role/internal-elb
        Value: true
      - Key: Name
        Value: !Sub "${AWS::StackName}-PrivateSubnet01"

  PrivateSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PrivateSubnet02Block
      VpcId: !Ref VPC
      Tags:
      - Key: kubernetes.io/role/internal-elb
        Value: true
      - Key: Name
        Value: !Sub "${AWS::StackName}-PrivateSubnet02"

  PrivateSubnet03:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PrivateSubnet03Block
      VpcId: !Ref VPC
      Tags:
      - Key: kubernetes.io/role/internal-elb
        Value: true
      - Key: Name
        Value: !Sub "${AWS::StackName}-PrivateSubnet03"

#-------------------------------------------------------------------#
################################### PublicSubnetsRouteConfiguration #

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"

  VPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    DependsOn: [ InternetGateway ]
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public Subnets RouteTable
      - Key: Network
        Value: Public

  PublicSubnetRoute:
    Type: AWS::EC2::Route
    DependsOn: [ VPCGatewayAttachment ]
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet01
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet02
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet03RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet03
      RouteTableId: !Ref PublicRouteTable

#-------------------------------------------------------------------#
################################## PrivateSubnetsRouteConfiguration #

  PrivateSubnet01RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Private Subnet01 RouteTable
      - Key: Network
        Value: Private

  PrivateSubnet02RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Private Subnet02 RouteTable
      - Key: Network
        Value: Private

  PrivateSubnet03RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Private Subnet03 RouteTable
      - Key: Network
        Value: Private

  PrivateSubnet01Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateSubnet01RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1

  PrivateSubnet02Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateSubnet02RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway2

  PrivateSubnet03Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateSubnet03RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway3

  PrivateSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet01
      RouteTableId: !Ref PrivateSubnet01RouteTable

  PrivateSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet02
      RouteTableId: !Ref PrivateSubnet02RouteTable

  PrivateSubnet03RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet03
      RouteTableId: !Ref PrivateSubnet03RouteTable

  NAT1EIP:
    Type: AWS::EC2::EIP
    DependsOn: [ VPCGatewayAttachment ]
    Properties:
      Domain: vpc

  NAT2EIP:
    Type: AWS::EC2::EIP
    DependsOn: [ VPCGatewayAttachment ]
    Properties:
      Domain: vpc

  NAT3EIP:
    Type: AWS::EC2::EIP
    DependsOn: [ VPCGatewayAttachment ]
    Properties:
      Domain: vpc

  NATGateway1:
    Type: AWS::EC2::NatGateway
    DependsOn: [ VPCGatewayAttachment ]
    Properties:
      AllocationId: !GetAtt NAT1EIP.AllocationId
      SubnetId: !Ref PublicSubnet01

  NATGateway2:
    Type: AWS::EC2::NatGateway
    DependsOn: [ VPCGatewayAttachment ]
    Properties:
      AllocationId: !GetAtt NAT2EIP.AllocationId
      SubnetId: !Ref PublicSubnet02

  NATGateway3:
    Type: AWS::EC2::NatGateway
    DependsOn: [ VPCGatewayAttachment ]
    Properties:
      AllocationId: !GetAtt NAT3EIP.AllocationId
      SubnetId: !Ref PublicSubnet03

#-------------------------------------------------------------------#
####################################### SecurityGroupsConfiguration #

  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: ${ClusterName}-ControlPlane

#-------------------------------------------------------------------#
########################################## EKS-clusterConfiguration #

  EKS:
    Type: "AWS::EKS::Cluster"
    Properties:
      Name: !Ref ClusterName
      Version: "1.11"
      RoleArn: !Ref ClusterRoleARN
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref ControlPlaneSecurityGroup
        SubnetIds:
          - !Ref PublicSubnet01
          - !Ref PublicSubnet02
          - !Ref PublicSubnet03
          - !Ref PrivateSubnet01
          - !Ref PrivateSubnet02
          - !Ref PrivateSubnet03

#-------------------------------------------------------------------#
################################################## Template Outputs #

Outputs:

  VpcId:
    Description: The VPC Id
    Value: !Ref VPC

  PublicSubnetIds:
    Description: All public subnets in the VPC
    Value: !Join [ ",", [ !Ref PublicSubnet01, !Ref PublicSubnet02, !Ref PublicSubnet03 ] ]

  PrivateSubnetIds:
    Description: All private subnets in the VPC
    Value: !Join [ ",", [ !Ref PrivateSubnet01, !Ref PrivateSubnet02, !Ref PrivateSubnet03 ] ]

  ControlPlaneSG:
    Description: Security group for the cluster control plane communication with worker nodes
    Value: !Join [ ",", [ !Ref ControlPlaneSecurityGroup ] ]

  EksArn:
    Description: ARN of Cluster
    Value: !GetAtt EKS.Arn
