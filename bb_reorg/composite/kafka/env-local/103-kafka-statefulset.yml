apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: kafka
  name: kafka
  namespace: kafka
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-svc
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: KAFKA_LISTENERS
              value: "INSIDE://:9092"
            - name: KAFKA_HEAP_OPTS
              value: "-Xmx1G -Xms512M"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper.zoo.svc:2181
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INSIDE:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INSIDE"

          image: 407733091588.dkr.ecr.us-west-2.amazonaws.com/ego-server/kafka-server:2.3.0
          command:
            - sh
            - -exc
            - |
              export KAFKA_ADVERTISED_LISTENERS=INSIDE://${POD_IP}:9092 && \
              start-kafka.sh
          imagePullPolicy: IfNotPresent
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "/opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server=localhost:9092"
            initialDelaySeconds: 10
            timeoutSeconds: 5
          name: kafka-broker
          ports:
            - containerPort: 9092
              name: kafka
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
  updateStrategy:
    type: OnDelete