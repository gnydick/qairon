AWSTemplateFormatVersion: '2010-09-09'
Description: 'Cleanspeak AWS RDS'

Parameters:

  VpcId:
    Description: The VPC of the worker instances
    Type: AWS::EC2::VPC::Id

  EnvName:
    Description: Environment name.
    Type: String

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: SubnetId for assosiation AWS RDS DB subnet group

  EC2SecurityGroupID:
    Description: "Specifies allowed SG to communicate with RDS"
    Type: AWS::EC2::SecurityGroup::Id
    ConstraintDescription: "Please provide valid ids for the security group(s)."
 
  RDSmultiAZ:
    Type: String
    AllowedValues: 
      - true
      - false
      - ''
    Default: ''
    Description: "Specifies whether the database instance is a multiple Availability Zone deployment."

  BackupRetentionPeriod:
    Type: String
    Default: ''
    Description: "The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups."

  PreferredBackupWindow:
    Type: String
    Default: ''
    Description: "he daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter."

  RDSsecurityGroupName:
    Description: 'Name of security group for RDS'
    Type: String

  RDSsecurityGroupPort:
    Description: Set port for RDS SG
    Type: String

  DBenableParameterGroup:
    Type: String
    AllowedValues: 
      - true
      - false
      - ''
    Default: ''
    Description: "Enable creation of DBParameterGroup"  

  DBParamGroupName:
    Type: String
    Default: ''
    Description: "Name for RDS parameter group"

  DBParamGroupFamily:
    Type: String
    Default: ''
    Description: "Family of RDS parameter group"

  DBname:
    Description: 'Database name in created RDS Instance'
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

  DBinstanceType:
    Description: 'The DBinstance type (e.g. db.t2.micro).'
    Type: String

  DBengine:
    Description: Engine type to be used for RDS.
    Type: String

  DBengineVer:
    Description: Engine version to be used for RDS.
    Type: String

  RDSvolumeSize:
    Description: Size for RDS volumes in GB
    Type: String

  RDSstorageType:
    Description: Type of storage for RDS
    Type: String

  RdsMasterUsername:
    NoEcho: true
    Description: 'RDS Master Password'
    Type: String
    MinLength: '6'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.

  MasterUserPassword:
    NoEcho: true
    # Password will get from Vault and set while deploy
    Default: nopasshere
    Description: 'RDS Master Password'
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.

#-------------------------------------------------------------------#
############################################### Template Conditions #
Conditions:
  MultiAZrds: !Equals [ !Ref RDSmultiAZ, true ]
  EnableBackups: !Equals [ !Ref BackupRetentionPeriod, true ]
  EnableDBparamGroup: !Equals [ !Ref DBenableParameterGroup, true ]

Resources:
#-------------------------------------------------------------------#
################################################# DB Security Group #
  CSrdsSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Ref RDSsecurityGroupName
      GroupDescription: Allow port from microserivce-tier SG
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref RDSsecurityGroupPort
          ToPort: !Ref RDSsecurityGroupPort
          SourceSecurityGroupId: !Ref EC2SecurityGroupID
      Tags:
        -
          Key: Name
          Value: !Ref RDSsecurityGroupName
        -
          Key: env
          Value: !Sub '${EnvName}'

#-------------------------------------------------------------------#
################################################### DB Subnet Group #
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DB subnet group
      SubnetIds: !Ref Subnets
      Tags:
      -
        Key: Name
        Value: !Ref RDSsecurityGroupName
      -
        Key: env
        Value: !Sub '${EnvName}'

#-------------------------------------------------------------------#
################################################ DB Parameter Group #

  RDSdbParameterGroup:
    Condition: EnableDBparamGroup
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: "Parameter group for RDS DB"
      Family: !Ref DBParamGroupFamily
      Parameters: 
        character_set_client: utf8mb4
        character-set-client-handshake: 0
        character_set_connection: utf8mb4
        character_set_database: utf8mb4
        character_set_results: utf8mb4
        character_set_server: utf8mb4
        collation_connection: utf8mb4_bin
        collation_server: utf8mb4_bin
        skip-character-set-client-handshake: 0
      Tags:
      -
        Key: Name
        Value: !Sub '${EnvName}-${DBname}'
      -
        Key: env
        Value: !Sub '${EnvName}'


#-------------------------------------------------------------------#
###################################################### RDS Instance #
  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref DBname
      AllocatedStorage: !Ref RDSvolumeSize
      StorageType: !Ref RDSstorageType
      DBInstanceClass: !Ref DBinstanceType
      Engine: !Ref DBengine
      EngineVersion: !Ref DBengineVer
      MasterUsername: !Ref RdsMasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      DBSubnetGroupName: !Ref DBSubnetGroup
      MultiAZ: 
       !If [ MultiAZrds, !Ref RDSmultiAZ, !Ref "AWS::NoValue" ] 
      BackupRetentionPeriod:
       !If [ EnableBackups, !Ref BackupRetentionPeriod, !Ref "AWS::NoValue" ] 
      PreferredBackupWindow:
       !If [ EnableBackups, !Ref PreferredBackupWindow, !Ref "AWS::NoValue" ] 
      DBParameterGroupName:
       !If [ EnableDBparamGroup, !Ref RDSdbParameterGroup, !Ref "AWS::NoValue" ]
      Port: 3306
      VPCSecurityGroups:
        - !Ref CSrdsSG
    DeletionPolicy: Delete

#-------------------------------------------------------------------#
################################################## Template Outputs #
Outputs:

  Database:
    Description: The name of the database instance.
    Value: !Ref Database

  RDSendpoint:
    Description: 'The connection endpoint for the database.'
    Value: !GetAtt 'Database.Endpoint.Address'

  DBparameterGroupName:
    Description: 'RDS Parameter Group Name'
    Value: !Ref RDSdbParameterGroup

  RDSsecurityGroupID:
    Description: 'ID of RDS Security Group'
    Value: !Ref CSrdsSG

  DBsubnetGroupID:
    Description: 'ID of RDS Subnet Group'
    Value: !Ref DBSubnetGroup