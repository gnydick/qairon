apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: zoo
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: zookeeper
  serviceName: zoo-headless
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - env:
            - name: ZOO_REPLICAS
              value: "1"
            - name: ZOO_INIT_LIMIT
              value: "10"
            - name: ZOO_HEAP_SIZE
              value: "512M"
            - name: ZOO_LOG_LEVEL
              value: "INFO"
          command:
            - sh
            - -c
            - zkGenConfig.sh && zkServer.sh start-foreground
          image: 407733091588.dkr.ecr.us-west-2.amazonaws.com/ego-server/zookeeper-server:3.5.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - "zkOk.sh"
            initialDelaySeconds: 10
            timeoutSeconds: 5
          name: zookeeper
          ports:
            - containerPort: 2181
              name: client
              protocol: TCP
            - containerPort: 3888
              name: election
              protocol: TCP
            - containerPort: 2888
              name: server
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - "zkOk.sh"
            initialDelaySeconds: 10
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/zookeeper
              name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: data
  updateStrategy:
    type: OnDelete