AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deploy configured VPC for EKS'

Parameters:

  ClusterName:
    Type: String
    Description: Name of k8s cluster will be used for tagging resources.

  VpcId:
    Type: String
    Description: The VPC of the worker instances.

  PublicSubnet01ID:
    Type: String
    Description: The ID of existing Public Subnet.

  PublicSubnet02ID:
    Type: String
    Description: The ID of existing Public Subnet.

  NATGateway1ID:
    Type: String
    Description: ID of existing NAT1 gateway in VPC

  NATGateway2ID:
    Type: String
    Description: ID of existing NAT2 gateway in VPC

  PrivateSubnet01CIDR:
    Type: String
    Description: CIDR for Private subnet 01 within the VPC.

  PrivateSubnet02CIDR:
    Type: String
    Description: CIDR for Private subnet 02 within the VPC.

Resources:

#-------------------------------------------------------------------#
####################################### PrivateSubnetsConfiguration #

  PrivateSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PrivateSubnet01CIDR
      VpcId: !Ref VpcId
      Tags:
      - Key: kubernetes.io/role/internal-elb
        Value: '1'
      - Key: Name
        Value: !Sub "${AWS::StackName}-PrivateSubnet01"

  PrivateSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PrivateSubnet02CIDR
      VpcId: !Ref VpcId
      Tags:
      - Key: kubernetes.io/role/internal-elb
        Value: '1'
      - Key: Name
        Value: !Sub "${AWS::StackName}-PrivateSubnet02"

#-------------------------------------------------------------------#
################################## PrivateSubnetsRouteConfiguration #

  PrivateSubnet01RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcId
      Tags:
      - Key: Name
        Value: Private Subnet01 RouteTable
      - Key: Network
        Value: Private

  PrivateSubnet02RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcId
      Tags:
      - Key: Name
        Value: Private Subnet02 RouteTable
      - Key: Network
        Value: Private

  PrivateSubnet01Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateSubnet01RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1ID

  PrivateSubnet02Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateSubnet02RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway2ID

  PrivateSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet01
      RouteTableId: !Ref PrivateSubnet01RouteTable

  PrivateSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet02
      RouteTableId: !Ref PrivateSubnet02RouteTable

#-------------------------------------------------------------------#
################################################## Template Outputs #

Outputs:

  VpcId:
    Description: The VPC Id
    Value: !Ref VpcId

  PubSubnetIDList:
    Description: List of all public subnets in the VPC
    Value: !Join [ ",", [ !Ref PublicSubnet01ID, !Ref PublicSubnet02ID ] ]

  PrivSubnetIDList:
    Description: List of all private subnets in the VPC
    Value: !Join [ ",", [ !Ref PrivateSubnet01, !Ref PrivateSubnet02 ] ]

  PubSubnet01ID:
    Description: ID of PubSubnet01
    Value: !Ref PublicSubnet01ID

  PubSubnet02ID:
    Description: ID of PubSubnet02
    Value: !Ref PublicSubnet02ID

  PrivSubnet01ID:
    Description: ID of PrivSubnet01
    Value: !Ref PrivateSubnet01

  PrivSubnet02ID:
    Description: ID of PrivSubnet02
    Value: !Ref PrivateSubnet02
