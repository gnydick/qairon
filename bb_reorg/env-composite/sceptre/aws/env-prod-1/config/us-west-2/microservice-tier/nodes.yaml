# controlVersion: 1
template_path: worker-nodes.yaml

parameters:
  NodeSecurityGroup: !stack_output us-west-2/eks/cluster.yaml::NodeSecurityGroup
  ClusterName: !resolver_yaml config/defaults.yml::EKS.ClusterName
  NodeImageId: !resolver_yaml config/defaults.yml::EKS.NodeImageId
  VpcId: !stack_output us-west-2/network/vpc.yaml::VpcId
  Subnets:
    - !stack_output us-west-2/network/vpc.yaml::PrivSubnet01ID
    - !stack_output us-west-2/network/vpc.yaml::PrivSubnet02ID
    - !stack_output us-west-2/network/vpc.yaml::PrivSubnet03ID
  CustomSecurityGroupName: microservice-tier
  KeyName: prod-1-key-pair
  NodeInstanceType: t3.large
  NodeAutoScalingGroupMinSize: '23'
  NodeAutoScalingGroupMaxSize: '50'
  NodeAutoScalingGroupDesiredCapacity: '23'
  NodeVolumeSize: '64'
  NodeGroupName: microservice-tier
  # Kubelet ARG'S
  NodeLabelARG: '--node-labels=prod-1-tier=microservice'
  KubeletReservedARG: '--kube-reserved cpu=250m,memory=1Gi,ephemeral-storage=1Gi'
  SystemReservedARG: '--system-reserved cpu=250m,memory=0.2Gi,ephemeral-storage=1Gi'
  EvictionHardARG: '--eviction-hard memory.available<500Mi,nodefs.available<10%'

sceptre_user_data:
  NodeRoleArn: "- rolearn: NodeRoleArn\n  username: system:node:{{ '{{EC2PrivateDNSName}}' }}\n  groups:\n    - system:bootstrappers\n    - system:nodes\n"
  NodeGroupName: "worker-nodes"
  FetchSavePath: !resolver_yaml config/defaults.yml::FetchSavePath
  
hooks:
  after_create:
    - !hook_eks ConfigMap::apply::aws-auth-append
    - !hook_eks ConfigMap::fetch::aws-auth@kube-system
  before_delete:
    - !hook_eks ConfigMap::delete::aws-auth@kube-system
