---
AWSTemplateFormatVersion: 2010-09-09
Description: Amazon EKS - Node Group

Parameters:

  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName

  NodeImageId:
    Description: AMI id for the node instances.
    Type: AWS::EC2::Image::Id

  NodeInstanceType:
    Description: EC2 instance type for the node instances
    Type: String

  NodeAutoScalingGroupMinSize:
    Description: Minimum size of Node Group ASG.
    Type: Number

  NodeAutoScalingGroupMaxSize:
    Description: Maximum size of Node Group ASG. Set to at least 1 greater than NodeAutoScalingGroupDesiredCapacity.
    Type: Number

  NodeAutoScalingGroupDesiredCapacity:
    Description: Desired capacity of Node Group ASG.
    Type: Number

  NodeVolumeSize:
    Description: Node volume size
    Type: Number

  ClusterName:
    Description: The cluster name provided when the cluster was created. If it is incorrect, nodes will not be able to join the cluster.
    Type: String

  NodeGroupName:
    Description: Unique identifier for the Node Group.
    Type: String

  NodeSecurityGroup:
    Description: The security group of tier.
    Type: AWS::EC2::SecurityGroup::Id

  VpcId:
    Description: The VPC of the worker instances
    Type: AWS::EC2::VPC::Id

  Subnets:
    Description: The subnets where workers can be created.
    Type: List<AWS::EC2::Subnet::Id>

  NodeLabelARG:
    Description: k8s labels that will be assigned to nodes.
    Type: String

  KubeletReservedARG:
    Description: k8s node reserved resources for Kubelet.
    Type: String

  SystemReservedARG:
    Description: k8s node reserved resources for node OS.
    Type: String

  EvictionHardARG:
    Description: Pod eviction rule.
    Type: String

Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: EKS Cluster
        Parameters:
          - ClusterName
      - Label:
          default: Worker Node Configuration
        Parameters:
          - NodeGroupName
          - NodeAutoScalingGroupMinSize
          - NodeAutoScalingGroupDesiredCapacity
          - NodeAutoScalingGroupMaxSize
          - NodeInstanceType
          - NodeImageId
          - NodeVolumeSize
          - KeyName
          - NodeLabelARG
          - KubeletReservedARG
          - SystemReservedARG
          - EvictionHardARG
      - Label:
          default: Worker Network Configuration
        Parameters:
          - VpcId
          - Subnets

Resources:

  NodeInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref NodeInstanceRole

  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

  NodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref NodeAutoScalingGroupDesiredCapacity
      LaunchConfigurationName: !Ref NodeLaunchConfig
      MinSize: !Ref NodeAutoScalingGroupMinSize
      MaxSize: !Ref NodeAutoScalingGroupMaxSize
      VPCZoneIdentifier: !Ref Subnets
      Tags:
        - Key: Name
          Value: !Sub ${ClusterName}-${NodeGroupName}-Node
          PropagateAtLaunch: true
        - Key: !Sub kubernetes.io/cluster/${ClusterName}
          Value: owned
          PropagateAtLaunch: true
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: 1
        MinInstancesInService: !Ref NodeAutoScalingGroupDesiredCapacity
        PauseTime: PT2M

  NodeLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      IamInstanceProfile: !Ref NodeInstanceProfile
      ImageId: !Ref NodeImageId
      InstanceType: !Ref NodeInstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref NodeSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref NodeVolumeSize
            VolumeType: gp2
            DeleteOnTermination: true
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            set -o xtrace
            # Sysctl changes
            cat <<EOF > /etc/sysctl.d/99-kubelet-network.conf
            # Have a larger connection range available
            net.ipv4.ip_local_port_range=1024 65000
            
            # Reuse closed sockets faster
            net.ipv4.tcp_tw_reuse=1
            net.ipv4.tcp_fin_timeout=15
            
            # The maximum number of "backlogged sockets".  Default is 128.
            net.core.somaxconn=4096
            net.core.netdev_max_backlog=4096
            
            # 50MB per socket - which sounds like a lot,
            # but will virtually never consume that much.
            net.core.rmem_max=26214400
            net.core.rmem_default=26214400
            net.core.wmem_max=26214400
            net.core.wmem_default=26214400
            
            # Various network tunables
            net.ipv4.tcp_max_syn_backlog=20480
            net.ipv4.tcp_max_tw_buckets=400000
            net.ipv4.tcp_no_metrics_save=1
            net.ipv4.tcp_rmem=4096 87380 16777216
            net.ipv4.tcp_syn_retries=2
            net.ipv4.tcp_synack_retries=2
            net.ipv4.tcp_wmem=4096 65536 16777216
            #vm.min_free_kbytes=65536
            
            # Connection tracking to prevent dropped connections (usually issue on LBs)
            net.netfilter.nf_conntrack_max=262144
            net.ipv4.netfilter.ip_conntrack_generic_timeout=120
            net.netfilter.nf_conntrack_tcp_timeout_established=86400
            
            # ARP cache settings for a highly loaded k8s cluster
            net.ipv4.neigh.default.gc_thresh1=8096
            net.ipv4.neigh.default.gc_thresh2=12288
            net.ipv4.neigh.default.gc_thresh3=16384
            EOF

            # Don't forget to...
            systemctl restart systemd-sysctl.service

            /etc/eks/bootstrap.sh ${ClusterName} \
                --kubelet-extra-args \
                    "${NodeLabelARG} \
                    ${KubeletReservedARG} \
                    ${SystemReservedARG} \
                    ${EvictionHardARG}"
            /opt/aws/bin/cfn-signal --exit-code $? \
                     --stack  ${AWS::StackName} \
                     --resource NodeGroup  \
                     --region ${AWS::Region}

Outputs:

  NodeInstanceRoleArn:
    Description: The node instance role ARN
    Value: !GetAtt NodeInstanceRole.Arn

  NodeInstanceRoleName:
    Description: The node instance role Name
    Value: !Ref NodeInstanceRole
