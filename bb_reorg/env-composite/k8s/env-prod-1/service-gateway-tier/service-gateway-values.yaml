# controlVersion: 1
# Docker image for pod
image:
  repository: 407733091588.dkr.ecr.us-west-2.amazonaws.com/ego-server/service-gateway-int
  tag: 1.0.62

kind: DaemonSet

# Labels
labels:
  # Add label "metrics: prometheus"
  metricsProm: false

# Update strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1

# Anti/Affinity rules
affinity:
  nodeAffinity:
    key: prod-1-tier
    values: gateway
  podAntiAffinity:
    weight: 100
    key: app
    values: service-gateway
    topologyKey: kubernetes.io/hostname

# livenessProbe configuration
livenessProbe:
  httpGet:
    path: /health/v1/lively
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 10
  failureThreshold: 10

# readinessProbe configuration
readinessProbe:
  httpGet:
    path: /health/v1/ready
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 10
  failureThreshold: 2

# Container ports
containerPorts:
  - containerPort: 80
  - containerPort: 8080
  - containerPort: 8082
  - containerPort: 8083

# k8s Service
service:
  # k8s Service type
  type: NodePort
  # k8s Service ports (If you adding new ports make sure that you set them in "containerPorts" too)
  ports:
    - port: 80
      targetPort: 80
      name: api
    - port: 8080
      targetPort: 8080
      nodePort: 32000
      name: status
    - port: 8082
      targetPort: 8082
      nodePort: 32001
      name: grpc
    - port: 8083
      targetPort: 8083
      name: cleanspeak-management

annotations: {}

command: []

env: []

# Pod resources
resources: []

##########################
##########################

# K8s ServiceAccount for pod
serviceAccount:
  create: false
  # name: ""
  # annotations:
  #   eks.amazonaws.com/role-arn: arn:aws:iam::407733091588:role/-----

##########################
##########################

# k8s Secret for microservice
secret:
  create: false
  name: "secret-stuff"
  version: 1.0.0
  secretContents: {}
