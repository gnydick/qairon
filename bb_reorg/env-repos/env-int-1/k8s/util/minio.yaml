apiVersion: v1
kind: Service
metadata:
  name: minio
spec:
  type: NodePort
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    app: minio
    component: minio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: minio
      component: minio
  template:
    metadata:
      labels:
        app: minio
        component: minio
    spec:
      initContainers:
        - name: create-default-bucket
          image: 407733091588.dkr.ecr.us-west-2.amazonaws.com/ego-server/minio-client:RELEASE.2019-08-21T19-59-10Z
          command: ["/bin/sh"]
          args: ["-c", "cd /data && mc mb asset-test-bucket"]
          volumeMounts:
            - name: data
              mountPath: "/data"
          env:
            - name: MINIO_ACCESS_KEY
              value: "minio"
            - name: MINIO_SECRET_KEY
              value: "minio123"
      containers:
        - name: minio
          image: 407733091588.dkr.ecr.us-west-2.amazonaws.com/ego-server/minio:RELEASE.2019-08-21T19-40-07Z
          args:
            - --compat
            - server
            - /data
          env:
            - name: MINIO_ACCESS_KEY
              value: "minio"
            - name: MINIO_SECRET_KEY
              value: "minio123"
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: data
              mountPath: "/data"
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 120
            periodSeconds: 20
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 120
            periodSeconds: 20
      volumes:
        - name: data
          emptyDir: {}