apiVersion: v1
kind: Service
metadata:
  name: user-behavior-tracker
  labels:
    component: user-behavior-tracker
    tier: user-behavior-tracker
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    name: http-rest
  - port: 8081
    targetPort: 8081
    name: grpc
  selector:
    component: user-behavior-tracker
    tier: user-behavior-tracker
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: user-behavior-tracker-deployment
  labels:
    component: user-behavior-tracker
    tier: user-behavior-tracker
spec:
  selector:
    matchLabels:
      component: user-behavior-tracker
  replicas: 1
  template:
    metadata:
      labels:
        component: user-behavior-tracker
        tier: user-behavior-tracker
    spec:
      containers:
      - name: user-behavior-tracker
        image: 407733091588.dkr.ecr.us-west-2.amazonaws.com/ego-server/user-behavior-tracker:0.0.56
        env:
        - name: IMVU_EVENT_SERVICE_SECRET
          value: "secret"
        - name: IMVU_EVENT_SERVICE_CID
          value: "12345678"
        - name: EVENTS_CUSTOM_APPLICATION
          value: "{ 'ego_chat': {'event_type': 'UI', 'event': 'room_chat'}, 'egoapp_metrics_log': {'event_type': 'metric'} }"
        command:
        - "/bin/bash"
        - "-c"
        - "./start.sh -Xms640m -Xmx640m -Dlogging.level.com.withme.userbehaviortracker=DEBUG -Dspring.profiles.active=local -Dimvu.event.service.host=mock-server -Dimvu.event.service.port=8080"
        lifecycle:
          preStop:
            httpGet:
              path: lifecycle/v1/preStop
              port: 8080
        livenessProbe:
          httpGet:
            path: /health/v1/lively
            port: 8080
          initialDelaySeconds: 40
          periodSeconds: 15
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /health/v1/ready
            port: 8080
          initialDelaySeconds: 40
          periodSeconds: 15
          failureThreshold: 2
        ports:
        - containerPort: 8080
        - containerPort: 8081
