apiVersion: v1
kind: Service
metadata:
  name: cleanspeak-webservice-server
  labels:
    component: cleanspeak-webservice-server
    tier: cleanspeak-webservice-server
spec:
  type: NodePort
  ports:
    - port: 8001
      targetPort: 8001
      name: http-rest
  selector:
    component: cleanspeak-webservice-server
    tier: cleanspeak-webservice-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cleanspeak-webservice-server-deployment
  labels:
    component: cleanspeak-webservice-server
    tier: cleanspeak-webservice-server
spec:
  selector:
    matchLabels:
      component: cleanspeak-webservice-server
  replicas: 1
  template:
    metadata:
      labels:
        component: cleanspeak-webservice-server
        tier: cleanspeak-webservice-server
    spec:
      initContainers:
        - name: check-db-ready
          image: 407733091588.dkr.ecr.us-west-2.amazonaws.com/ego-server/mysql:5.7.26
          command: ['sh', '-c', 'while ! mysqladmin ping -h "$(MYSQL_HOST)" --silent; do echo "waiting for $(MYSQL_HOST)"; sleep 2; done;']
          env:
            - name: MYSQL_HOST
              value: cleanspeak-database-server

        - name: check-search-server-ready
          image: 407733091588.dkr.ecr.us-west-2.amazonaws.com/ego-server/busybox:1.27.2
          command: ['sh', '-c', 'until nslookup $(SEARCH_SERVER_HOST); do echo waiting for $(SEARCH_SERVER_HOST); sleep 2; done']
          env:
            - name: SEARCH_SERVER_HOST
              value: cleanspeak-search-server
      containers:
        - name: cleanspeak-webservice-server
          image: 407733091588.dkr.ecr.us-west-2.amazonaws.com/ego-server/cleanspeak-webservice-server:3.28.1
          env:
            - name: LICENSE_ID
              value: "test-license-id"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "[ $(curl -s -o /dev/null -w \"%{http_code}\" http://localhost:8001/status) -eq \"200\" ]"
            initialDelaySeconds: 40
            periodSeconds: 10
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /status
              port: 8001
            initialDelaySeconds: 40
            periodSeconds: 10
            failureThreshold: 2
          ports:
            - containerPort: 8001