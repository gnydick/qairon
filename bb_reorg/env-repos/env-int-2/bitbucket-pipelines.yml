image:
  name: 407733091588.dkr.ecr.us-west-2.amazonaws.com/ego-cicd/aws-orchestration:1.0.0
  aws:
    access-key: $AWS_EGO_ACCESS_KEY
    secret-key: $AWS_EGO_SECRET_KEY

pipelines:
  tags:
    aws-resources-v*:
      - step:
          name: Execute automation script for deploy cloudformation templates.
          script:
            - /aws/set-aws-credentials.sh --key-id $AWS_EGO_ACCESS_KEY --secret-access-key $AWS_EGO_SECRET_KEY
            - cd $BITBUCKET_CLONE_DIR/aws-automation && /bin/bash aws-automation.sh
    cleanspeak-secrets-v*:
      - step:
          name: Get the CleanSpeak secrets from the Vault and deploy them as a Kubernetes Secret
          script:
            - /aws/set-aws-credentials.sh --key-id $AWS_EGO_ACCESS_KEY --secret-access-key $AWS_EGO_SECRET_KEY
            - cd $BITBUCKET_CLONE_DIR && /bin/bash cleanspeak-secrets.sh
    cleanspeak-credentials-v*:
      - step:
          name: Get the CleanSpeak Credentials from the Vault and deploy them as a Kubernetes Secret
          script:
            - /aws/set-aws-credentials.sh --key-id $AWS_EGO_ACCESS_KEY --secret-access-key $AWS_EGO_SECRET_KEY
            - cd $BITBUCKET_CLONE_DIR && /bin/bash cleanspeak-credentials.sh
    firebase-secrets-v*:
      - step:
          name: Get the Firebase FCM credentials from the Vault and deploy them as K8s secrets
          script:
            - /aws/set-aws-credentials.sh --key-id $AWS_EGO_ACCESS_KEY --secret-access-key $AWS_EGO_SECRET_KEY
            - cd $BITBUCKET_CLONE_DIR && /bin/bash firebase-secrets.sh
    imvu-event-service-secrets-v*:
      - step:
          name: Get the IMVU Event Service credentials from the Vault and deploy them as K8s secrets
          script:
            - /aws/set-aws-credentials.sh --key-id $AWS_EGO_ACCESS_KEY --secret-access-key $AWS_EGO_SECRET_KEY
            - cd $BITBUCKET_CLONE_DIR && /bin/bash imvu-event-service-secrets.sh
    support-action-manager-secrets-v*:
      - step:
          name: Get the CustomerSupport User AccountID IMVU from the Vault and deploy them as K8s secrets
          script:
            - /aws/set-aws-credentials.sh --key-id $AWS_EGO_ACCESS_KEY --secret-access-key $AWS_EGO_SECRET_KEY
            - cd $BITBUCKET_CLONE_DIR && /bin/bash support-action-manager-secrets.sh
    appsflyer-credentials-v*:
      - step:
          name: Get the Appsflyer credentials from the Vault and deploy them as k8s secrets
          script:
            - /aws/set-aws-credentials.sh --key-id $AWS_EGO_ACCESS_KEY --secret-access-key $AWS_EGO_SECRET_KEY
            - cd $BITBUCKET_CLONE_DIR && /bin/bash appsflyer-credentials.sh