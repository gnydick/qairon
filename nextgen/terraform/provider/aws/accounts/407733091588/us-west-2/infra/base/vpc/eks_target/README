
***** this is all done by terraform, move on to the uncommented part *****


/// To launch your worker nodes

/// Open the AWS CloudFormation console at https://console.aws.amazon.com/cloudformation.

/// From the navigation bar, select a Region that supports Amazon EKS.

/// Note

/// Amazon EKS is available in the following Regions at this time:

/// US West (Oregon) (us-west-2)

/// US East (N. Virginia) (us-east-1)

/// Choose Create stack.

/// For Choose a template, select Specify an Amazon S3 template URL.

/// Paste the following URL into the text area and choose Next:

/// https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/amazon-eks-nodegroup.yaml
/// On the Specify Details page, fill out the following parameters accordingly, and choose Next:

/// Stack name: Choose a stack name for your AWS CloudFormation stack. For example, you can call it <cluster-name>-worker-nodes.

/// ClusterName: Enter the name that you used when you created your Amazon EKS cluster.

/// Important

/// This name must exactly match your Amazon EKS cluster name. Otherwise, your worker nodes will be unable to join it.

/// ClusterControlPlaneSecurityGroup: Enter the security group or groups that you used when you created your Amazon EKS cluster. This AWS CloudFormation template creates a worker node security group that allows traffic to and from the cluster control plane security group specified.

/// NodeGroupName: Enter a name for your node group that is included in your Auto Scaling node group name.

/// NodeAutoScalingGroupMinSize: Enter the minimum number of nodes to which your worker node Auto Scaling group can scale in.

/// NodeAutoScalingGroupMaxSize: Enter the maximum number of nodes to which your worker node Auto Scaling group can scale out.

/// NodeInstanceType: Choose an instance type for your worker nodes.

/// NodeImageId: Enter the current Amazon EKS worker node AMI ID for your Region.

/// Region	Amazon EKS-optimized AMI ID
/// US West (Oregon) (us-west-2)	ami-0ea01e1d1dea65b5c
/// US East (N. Virginia) (us-east-1)	ami-0fef2bff3c2e2da93
/// Note

/// The Amazon EKS worker node AMI is based on Amazon Linux 2. You can track security or privacy events for Amazon Linux 2 at the Amazon Linux Security Center or subscribe to the associated RSS feed. Security and privacy events include an overview of the issue, what packages are affected, and how to update your instances to correct the issue.

/// KeyName: Enter the name of an Amazon EC2 SSH key pair that you can use to connect using SSH into your worker nodes with after they launch.

/// VpcId: Enter the ID for the VPC that your worker nodes should launch into.

/// Subnets: Choose the subnets within the above VPC that your worker nodes should launch into.

/// On the Options page, you can choose to tag your stack resources. Choose Next.

/// On the Review page, review your information, acknowledge that the stack might create IAM resources, and then choose Create.

/// When your stack has finished creating, select it in the console and choose Outputs.

Record the NodeInstanceRole for the node group that was created. You need this when you configure your Amazon EKS worker nodes.

To enable worker nodes to join your cluster

Download, edit, and apply the AWS IAM Authenticator configuration map.

Download the configuration map:

curl -O https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/aws-auth-cm.yaml
Open the file with your favorite text editor. Replace the <ARN of instance role (not instance profile)> snippet with the NodeInstanceRole value that you recorded in the previous procedure, and save the file.

Important

Do not modify any other lines in this file.

apiVersion: v1
kind: ConfigMap
metadata:
  name: aws-auth
  namespace: kube-system
data:
  mapRoles: |
    - rolearn: <ARN of instance role (not instance profile)>
      username: system:node:{{EC2PrivateDNSName}}
      groups:
        - system:bootstrappers
        - system:nodes
Apply the configuration. This command may take a few minutes to finish.

kubectl apply -f aws-auth-cm.yaml
Note

If you receive the error "aws-iam-authenticator": executable file not found in $PATH, then your kubectl is not configured for Amazon EKS. For more information, see Configure kubectl for Amazon EKS.

Watch the status of your nodes and wait for them to reach the Ready status.

kubectl get nodes --watch