apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "qairon.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "qairon.name" . }}
    helm.sh/chart: {{ include "qairon.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "qairon.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "qairon.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          command: [ "gunicorn", "app:app", "-b", "0.0.0.0:5001", "--keep-alive", "86400", "--preload", "--workers=16", "-k", "gevent" ]
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: flask
              containerPort: 5001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /admin/
              port: flask
          readinessProbe:
            httpGet:
              path: /admin/
              port: flask
          env:
            - name: QAIRON_ENDPOINT
              value: "http://qairon:5001"
            - name: SQLALCHEMY_DATABASE_URI
              value: "postgresql+psycopg2://{{ .Values.env.user }}:{{ .Values.env.passwd }}@{{ .Values.env.db }}:5432/qairon"
            - name: SECRET_KEY
              value: {{ randAlphaNum 32 | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
